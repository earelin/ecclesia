apply plugin: 'war'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'jetty'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'info.solidsoft.pitest'

// JDK 8
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  compile 'ch.qos.logback:logback-classic:1.+'
	
  // spring
  compile 'org.springframework:spring-webmvc:4.2.5.RELEASE'
  compile 'org.springframework:spring-tx:4.2.5.RELEASE'
  compile 'org.springframework:spring-orm:4.2.5.RELEASE'
  compile 'org.springframework:spring-test:4.2.5.RELEASE'
  
  // hibernate
  compile 'org.hibernate:hibernate-core:4.3.11.Final'
  compile 'org.hibernate:hibernate-entitymanager:4.3.11.Final'
  compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
  
  compile 'org.hibernate:hibernate-validator:4.3.2.Final'
	
  // jstl
  compile 'javax.servlet:jstl:1.2'
  
  // databases
  compile 'org.apache.commons:commons-dbcp2:2.+'
  compile 'mysql:mysql-connector-java:5.+'
  compile 'com.h2database:h2:1.+'
  
  // thymeleaf
  compile 'org.thymeleaf:thymeleaf:2.+'
  compile 'org.thymeleaf:thymeleaf-spring4:2.+'
  
  // spring security
  compile 'org.springframework.security:spring-security-config:4.0.4.RELEASE'
  compile 'org.springframework.security:spring-security-web:4.0.4.RELEASE'
  compile 'org.springframework.security:spring-security-taglibs:4.0.4.RELEASE'
  
  // password validator
  compile 'org.passay:passay:1.+'
  
  // object conversion
  compile 'net.sf.dozer:dozer:5.+'
  
  // image transformation
  compile 'net.coobird:thumbnailator:0.4.8'
  
  // file detection and parsing
  compile 'org.apache.tika:tika-java7:1.+'
	
	// include in compile only, exclude in the war
	providedCompile 'javax.servlet:servlet-api:2.5'
	providedCompile 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.1'
  
  // testing pile
  testCompile 'net.serenity-bdd:serenity-core:1.+'
  testCompile 'net.serenity-bdd:serenity-junit:1.+'
  testCompile 'net.serenity-bdd:serenity-jbehave:1.+'
  testCompile 'junit:junit:4.+'
  testCompile 'org.mockito:mockito-core:1.+'
  testCompile 'org.dbunit:dbunit:+'
  testCompile 'org.hamcrest:hamcrest-all:1.3'
}

buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  
  dependencies {
    classpath 'net.serenity-bdd:serenity-gradle-plugin:1.+'
    classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.+'
  }
}

[jettyRun, jettyRunWar, jettyStop]*.stopPort = 8090
[jettyRun, jettyRunWar, jettyStop]*.stopKey = 'stop-key'

test {
  include 'org/earelin/ecclesia/integration/**'
  include 'org/earelin/ecclesia/unit/**'
  exclude 'org/earelin/ecclesia/bdd/**'
}

task testUI(type: Test) {
  include 'org/earelin/ecclesia/bdd/**'
  
  reports.junitXml.destination = "$buildDir/ui-test-results"
  reports.html.destination = "$buildDir/reports/ui-tests"
  
  doFirst {
    jettyRun.daemon = true
    tasks.jettyRun.execute()
  }
  
  doLast {
    tasks.jettyStop.execute()
  }
}

//check.dependsOn testUI

jacocoTestReport {
  reports {
    xml.enabled = true
    html.enabled = true
  }
  afterEvaluate {
    classDirectories = files(classDirectories.files.collect {
      fileTree(dir: it, exclude: 'org/earelin/ecclesia/config')
    })
  }
}

check.dependsOn jacocoTestReport

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

findbugs {
  effort = 'max'
  ignoreFailures = true
  reportLevel = 'low'
}

pitest {
    targetClasses = ['org.earelin.ecclesia.*']
    threads = 4
    outputFormats = ['XML', 'HTML']
}
